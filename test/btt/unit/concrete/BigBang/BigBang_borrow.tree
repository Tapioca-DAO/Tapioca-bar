BigBang_borrow.t.sol
├── when contract is paused
│   └── it should revert with 'Market: paused'
└── when contract is not puased
    ├── when called for itself
    │   └── it should revert with 'Market: cannot execute on itself'
    ├── when amount is too low
    │   └── it should revert
    ├── when it's called for a valid sender by itself
    │   ├── when position is solvent
    │   │   ├── when borrow cap is not reached
    │   │   │   ├── when opening fee is not 0
    │   │   │   │   ├── it should emit LogBorrow
    │   │   │   │   ├── it should increase asset supply
    │   │   │   │   ├── it should increase 'totalBorrow.base'
    │   │   │   │   ├── it should increase 'totalBorrow.elastic'
    │   │   │   │   ├── it should increase 'userBorrowPart'
    │   │   │   │   ├── it should increase user's YieldBox position
    │   │   │   │   └── it should have a 'userBorrowPart' equal to amount + fee
    │   │   │   └── when opening fee is 0
    │   │   │       ├── it should emit LogBorrow
    │   │   │       ├── it should increase asset supply
    │   │   │       ├── it should increase 'totalBorrow.base'
    │   │   │       ├── it should increase 'totalBorrow.elastic'
    │   │   │       ├── it should increase 'userBorrowPart'
    │   │   │       ├── it should increase user's YieldBox position
    │   │   │       └── it should have a 'userBorrowPart' equal to the borrowed amount
    │   │   └── when borrow cap is reached
    │   │       └── it should revert
    │   └── when position is not solvent
    │       └── it should revert with 'Market: insolvent'
    └── when it's called from another user
        ├── when user does not have enough allowance
        │   └── it should revert with 'Market: not approved'
        └── when user has been given allowance
            ├── when borrow cap is not reached
            │   ├── when opening fee is not 0
            │   │   ├── it should emit LogBorrow
            │   │   ├── it should increase asset supply
            │   │   ├── it should increase 'totalBorrow.base'
            │   │   ├── it should increase 'totalBorrow.elastic'
            │   │   ├── it should increase 'userBorrowPart'
            │   │   ├── it should increase user's YieldBox position
            │   │   └── it should have a 'userBorrowPart' equal to amount + fee
            │   └── when opening fee is 0
            │       ├── it should emit LogBorrow
            │       ├── it should increase asset supply
            │       ├── it should increase 'totalBorrow.base'
            │       ├── it should increase 'totalBorrow.elastic'
            │       ├── it should increase 'userBorrowPart'
            │       ├── it should increase user's YieldBox position
            │       └── it should have a 'userBorrowPart' equal to the borrowed amount
            └── when borrow cap is reached
                └── it should revert